<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andawell.material.mapper.TDbZqdbqdMapper">
  <resultMap id="BaseResultMap" type="com.andawell.material.entity.TDbZqdbqd">
    <id column="DBDH" jdbcType="VARCHAR" property="dbdh" />
    <id column="JH" jdbcType="VARCHAR" property="jh" />
    <id column="ZL" jdbcType="VARCHAR" property="zl" />
    <id column="JX" jdbcType="VARCHAR" property="jx" />
    <result column="SL" jdbcType="DECIMAL" property="sl" />
    <result column="BZ" jdbcType="VARCHAR" property="bz" />
    <result column="BZW" jdbcType="DECIMAL" property="bzw" />
    <result column="ZCFFRQ" jdbcType="TIMESTAMP" property="zcffrq" />
    <result column="DJ" jdbcType="DECIMAL" property="dj" />
    <result column="FFDW" jdbcType="VARCHAR" property="ffdw" />
    <result column="JSDW" jdbcType="VARCHAR" property="jsdw" />
    <result column="SJSQ" jdbcType="VARCHAR" property="sjsq" />
    <result column="SQYY" jdbcType="VARCHAR" property="sqyy" />
    <result column="SQZT" jdbcType="VARCHAR" property="sqzt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DBDH, JH, ZL, JX, SL, BZ, BZW, ZCFFRQ, DJ, FFDW, JSDW, SJSQ, SQYY, SQZT
  </sql>
  <select id="getToteDBSL" resultType="java.lang.Integer">
      select NVL(SUM(SL),0)
      from T_DB_ZQDBQD
      where  DBDH  in (select DBDH from T_DB_ZQDB where clzt ='1' and xfzt='0'and ffdw = #{query.userdw})
      and ffdw = #{query.ffdw}
      and jx =   #{query.jx}
      and jh =   #{query.jh}
    </select>
  <select id="getDBSummber" resultType="java.lang.Integer">
         select SL
         from T_DB_ZQDBQD
         where DBDH =(select DBDH from T_DB_ZQDB where sqdh= #{query.sqdh} and jx = #{query.jx})
         and jh =#{query.jh}
         and ffdw = #{query.ffdw}
    </select>
  <select id="getUpAskList" resultType="com.andawell.material.vo.TDbJgdbVO">
    select T_DB_ZQDBQD.dbdh,T_DB_ZQDBQD.jsdw,T_DB_ZQDBQD.jx,T_DB_ZQDBQD.jh,T_JH_JH.Mc jhmc,T_XT_JLDW.MC jldwmc,T_DB_ZQDBQD.sl,
    CASE WHEN sqyy='S1' THEN '缺件' WHEN sqyy='S2' THEN '定检更新' WHEN sqyy='S3' THEN '故障更新' ELSE '其他原因' END sqyymc,
    T_DB_ZQDBQD.sqyy,T_DB_ZQDBQD.zl,nvl(T_DB_ZQDBQD.dj,0) dj,T_JH_JX.mc jxmc
    from T_DB_ZQDBQD
    LEFT JOIN T_JH_JH ON T_DB_ZQDBQD.JH = T_JH_JH.Id
    LEFT JOIN T_JH_JX ON T_DB_ZQDBQD.jx = T_JH_JX.Id
    LEFT JOIN T_XT_JLDW ON T_JH_JH.DW=T_XT_JLDW.ID
    where 1=1
    <if test="query.jx != null">
      and T_DB_ZQDBQD.jx like '${query.jx}%'
    </if>
    <if test="query.ffdw != null">
      and T_DB_ZQDBQD.ffdw = #{query.ffdw}
    </if>
    and T_DB_ZQDBQD.sjsq = '1'
    and T_DB_ZQDBQD.sqzt = '0'
  </select>






  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_DB_ZQDBQD
    where DBDH = #{dbdh,jdbcType=VARCHAR}
      and JH = #{jh,jdbcType=VARCHAR}
      and ZL = #{zl,jdbcType=VARCHAR}
      and JX = #{jx,jdbcType=VARCHAR}
      and ffdw = #{ffdw,jdbcType=VARCHAR}
  </select>
    <select id="getIsExistByPrimaryKey" resultType="java.lang.Integer">
      select count(*)
      from T_DB_ZQDBQD
      where DBDH = #{query.dbdh,jdbcType=VARCHAR}
      and JH = #{query.jh,jdbcType=VARCHAR}
      and ZL = #{query.zl,jdbcType=VARCHAR}
      and JX = #{query.jx,jdbcType=VARCHAR}
      and ffdw = #{query.ffdw,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="map">
    delete from T_DB_ZQDBQD
    where DBDH = #{dbdh,jdbcType=VARCHAR}
      and JH = #{jh,jdbcType=VARCHAR}
      and ZL = #{zl,jdbcType=VARCHAR}
      and JX = #{jx,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.andawell.material.entity.TDbZqdbqd">
    insert into T_DB_ZQDBQD (DBDH, JH, ZL, 
      JX, SL, BZ, BZW, 
      ZCFFRQ, DJ, FFDW, 
      JSDW, SJSQ, SQYY, SQZT
      )
    values (#{dbdh,jdbcType=VARCHAR}, #{jh,jdbcType=VARCHAR}, #{zl,jdbcType=VARCHAR}, 
      #{jx,jdbcType=VARCHAR}, #{sl,jdbcType=DECIMAL}, #{bz,jdbcType=VARCHAR}, #{bzw,jdbcType=DECIMAL}, 
      #{zcffrq,jdbcType=TIMESTAMP}, #{dj,jdbcType=DECIMAL}, #{ffdw,jdbcType=VARCHAR}, 
      #{jsdw,jdbcType=VARCHAR}, #{sjsq,jdbcType=VARCHAR}, #{sqyy,jdbcType=VARCHAR}, #{sqzt,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.andawell.material.entity.TDbZqdbqd">
    insert into T_DB_ZQDBQD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dbdh != null">
        DBDH,
      </if>
      <if test="jh != null">
        JH,
      </if>
      <if test="zl != null">
        ZL,
      </if>
      <if test="jx != null">
        JX,
      </if>
      <if test="sl != null">
        SL,
      </if>
      <if test="bz != null">
        BZ,
      </if>
      <if test="bzw != null">
        BZW,
      </if>
      <if test="zcffrq != null">
        ZCFFRQ,
      </if>
      <if test="dj != null">
        DJ,
      </if>
      <if test="ffdw != null">
        FFDW,
      </if>
      <if test="jsdw != null">
        JSDW,
      </if>
      <if test="sjsq != null">
        SJSQ,
      </if>
      <if test="sqyy != null">
        SQYY,
      </if>
      <if test="sqzt != null">
        SQZT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dbdh != null">
        #{dbdh,jdbcType=VARCHAR},
      </if>
      <if test="jh != null">
        #{jh,jdbcType=VARCHAR},
      </if>
      <if test="zl != null">
        #{zl,jdbcType=VARCHAR},
      </if>
      <if test="jx != null">
        #{jx,jdbcType=VARCHAR},
      </if>
      <if test="sl != null">
        #{sl,jdbcType=DECIMAL},
      </if>
      <if test="bz != null">
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="bzw != null">
        #{bzw,jdbcType=DECIMAL},
      </if>
      <if test="zcffrq != null">
        #{zcffrq,jdbcType=TIMESTAMP},
      </if>
      <if test="dj != null">
        #{dj,jdbcType=DECIMAL},
      </if>
      <if test="ffdw != null">
        #{ffdw,jdbcType=VARCHAR},
      </if>
      <if test="jsdw != null">
        #{jsdw,jdbcType=VARCHAR},
      </if>
      <if test="sjsq != null">
        #{sjsq,jdbcType=VARCHAR},
      </if>
      <if test="sqyy != null">
        #{sqyy,jdbcType=VARCHAR},
      </if>
      <if test="sqzt != null">
        #{sqzt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



  <update id="updateByPrimaryKeySelective" parameterType="com.andawell.material.entity.TDbZqdbqd">
    update T_DB_ZQDBQD
    <set>
      <if test="sl != null">
        SL = #{sl,jdbcType=DECIMAL},
      </if>
      <if test="bz != null">
        BZ = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="bzw != null">
        BZW = #{bzw,jdbcType=DECIMAL},
      </if>
      <if test="zcffrq != null">
        ZCFFRQ = #{zcffrq,jdbcType=TIMESTAMP},
      </if>
      <if test="dj != null">
        DJ = #{dj,jdbcType=DECIMAL},
      </if>
      <if test="ffdw != null">
        FFDW = #{ffdw,jdbcType=VARCHAR},
      </if>
      <if test="jsdw != null">
        JSDW = #{jsdw,jdbcType=VARCHAR},
      </if>
      <if test="sjsq != null">
        SJSQ = #{sjsq,jdbcType=VARCHAR},
      </if>
      <if test="sqyy != null">
        SQYY = #{sqyy,jdbcType=VARCHAR},
      </if>
      <if test="sqzt != null">
        SQZT = #{sqzt,jdbcType=VARCHAR},
      </if>
    </set>
    where DBDH = #{dbdh,jdbcType=VARCHAR}
      and JH = #{jh,jdbcType=VARCHAR}
      and ZL = #{zl,jdbcType=VARCHAR}
      and JX = #{jx,jdbcType=VARCHAR}
    and FFDW = #{ffdw,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.andawell.material.entity.TDbZqdbqd">
    update T_DB_ZQDBQD
    set SL = #{sl,jdbcType=DECIMAL},
      BZ = #{bz,jdbcType=VARCHAR},
      BZW = #{bzw,jdbcType=DECIMAL},
      ZCFFRQ = #{zcffrq,jdbcType=TIMESTAMP},
      DJ = #{dj,jdbcType=DECIMAL},
      FFDW = #{ffdw,jdbcType=VARCHAR},
      JSDW = #{jsdw,jdbcType=VARCHAR},
      SJSQ = #{sjsq,jdbcType=VARCHAR},
      SQYY = #{sqyy,jdbcType=VARCHAR},
      SQZT = #{sqzt,jdbcType=VARCHAR}
    where DBDH = #{dbdh,jdbcType=VARCHAR}
      and JH = #{jh,jdbcType=VARCHAR}
      and ZL = #{zl,jdbcType=VARCHAR}
      and JX = #{jx,jdbcType=VARCHAR}
      and ffdw = #{ffdw,jdbcType=VARCHAR}
  </update>
</mapper>