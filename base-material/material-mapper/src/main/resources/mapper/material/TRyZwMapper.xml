<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andawell.material.mapper.TRyZwMapper">
  <resultMap id="BaseResultMap" type="com.andawell.material.entity.TRyZw">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="MC" jdbcType="VARCHAR" property="mc" />
    <result column="JM" jdbcType="VARCHAR" property="jm" />
    <result column="PID" jdbcType="VARCHAR" property="pid" />
  </resultMap>


  <sql id="Base_Column_List">
    ID, MC, JM ,PID
  </sql>
  <delete id="deleteSqlLiteList">
    truncate table T_RY_ZW
  </delete>


  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_RY_ZW
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByMc" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from T_RY_ZW
    where MC = #{mc}
  </select>

  <select id="getSqlLiteList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from T_RY_ZW
  </select>

  <select id="getMaxId" resultType="java.lang.String">
    select max(to_number(ID))
    from t_ry_zw t
    where length(id)&lt;4
  </select>
  <select id="getTwoMaxId" parameterType="java.lang.String" resultType="java.lang.String">
    select max(to_number(ID))
    from t_ry_zw t
    where id like '${id}__'
  </select>
  <select id="listTwoZw" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_ry_zw t
    where id like '${id}__'
  </select>

  <select id="list" resultMap="BaseResultMap">
    select * from T_RY_ZW
    <include refid="queryCondition"/>
  </select>


  <sql id="queryCondition">
    <where>
      1=1
      <if test="query!=null">
        <if test="query.id!=null and query.id.length()>0">
          and T_RY_ZW.ID like '%${query.id}%'
        </if>
        <if test="query.mc!=null and query.mc.length()>0">
          and T_RY_ZW.MC like '%${query.mc}%'
        </if>
        <if test="query.jm!=null and query.jm.length()>0">
          and T_RY_ZW.JM like '%${query.jm}%'
        </if>
      </if>
    </where>
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_RY_ZW
    where ID = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.andawell.material.entity.TRyZw">
    insert into T_RY_ZW (ID, MC, JM, PID)
    values (#{id,jdbcType=VARCHAR}, #{mc,jdbcType=VARCHAR}, #{jm,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.andawell.material.entity.TRyZw">
    insert into T_RY_ZW
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="mc != null">
        MC,
      </if>
      <if test="jm != null">
        JM,
      </if>
      <if test="pid != null">
        PID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mc != null">
        #{mc,jdbcType=VARCHAR},
      </if>
      <if test="jm != null">
        #{jm,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.andawell.material.entity.TRyZw">
    update T_RY_ZW
    <set>
      <if test="mc != null">
        MC = #{mc,jdbcType=VARCHAR},
      </if>
      <if test="jm != null">
        JM = #{jm,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.andawell.material.entity.TRyZw">
    update T_RY_ZW
    set MC = #{mc,jdbcType=VARCHAR},
      JM = #{jm,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>